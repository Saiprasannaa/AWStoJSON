{"prefix": " Amazon API Gateway Management V2", "link": ["https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazonapigatewaymanagementv2.html"], "actions": [{"action": "DELETE", "desc": "Grants permission to delete a particular resource", "access": "Write", "resources": "AccessLogSettings", "conditionKeys": "", "dependentActions": ""}, {"action": "DELETE", "desc": "Grants permission to delete a particular resource", "access": "Write", "resources": "Api", "conditionKeys": "", "dependentActions": ""}, {"action": "DELETE", "desc": "Grants permission to delete a particular resource", "access": "Write", "resources": "ApiMapping", "conditionKeys": "", "dependentActions": ""}, {"action": "DELETE", "desc": "Grants permission to delete a particular resource", "access": "Write", "resources": "Authorizer", "conditionKeys": "", "dependentActions": ""}, {"action": "DELETE", "desc": "Grants permission to delete a particular resource", "access": "Write", "resources": "AuthorizersCache", "conditionKeys": "", "dependentActions": ""}, {"action": "DELETE", "desc": "Grants permission to delete a particular resource", "access": "Write", "resources": "Cors", "conditionKeys": "", "dependentActions": ""}, {"action": "DELETE", "desc": "Grants permission to delete a particular resource", "access": "Write", "resources": "Deployment", "conditionKeys": "", "dependentActions": ""}, {"action": "DELETE", "desc": "Grants permission to delete a particular resource", "access": "Write", "resources": "Integration", "conditionKeys": "", "dependentActions": ""}, {"action": "DELETE", "desc": "Grants permission to delete a particular resource", "access": "Write", "resources": "IntegrationResponse", "conditionKeys": "", "dependentActions": ""}, {"action": "DELETE", "desc": "Grants permission to delete a particular resource", "access": "Write", "resources": "Model", "conditionKeys": "", "dependentActions": ""}, {"action": "DELETE", "desc": "Grants permission to delete a particular resource", "access": "Write", "resources": "Route", "conditionKeys": "", "dependentActions": ""}, {"action": "DELETE", "desc": "Grants permission to delete a particular resource", "access": "Write", "resources": "RouteRequestParameter", "conditionKeys": "", "dependentActions": ""}, {"action": "DELETE", "desc": "Grants permission to delete a particular resource", "access": "Write", "resources": "RouteResponse", "conditionKeys": "", "dependentActions": ""}, {"action": "DELETE", "desc": "Grants permission to delete a particular resource", "access": "Write", "resources": "RouteSettings", "conditionKeys": "", "dependentActions": ""}, {"action": "DELETE", "desc": "Grants permission to delete a particular resource", "access": "Write", "resources": "Stage", "conditionKeys": "", "dependentActions": ""}, {"action": "DELETE", "desc": "Grants permission to delete a particular resource", "access": "Write", "resources": "", "conditionKeys": "aws:RequestTag/${TagKey}\n\n\naws:TagKeys", "dependentActions": ""}, {"action": "GET", "desc": "Grants permission to read a particular resource", "access": "Read", "resources": "AccessLogSettings", "conditionKeys": "", "dependentActions": ""}, {"action": "GET", "desc": "Grants permission to read a particular resource", "access": "Read", "resources": "Api", "conditionKeys": "", "dependentActions": ""}, {"action": "GET", "desc": "Grants permission to read a particular resource", "access": "Read", "resources": "ApiMapping", "conditionKeys": "", "dependentActions": ""}, {"action": "GET", "desc": "Grants permission to read a particular resource", "access": "Read", "resources": "ApiMappings", "conditionKeys": "", "dependentActions": ""}, {"action": "GET", "desc": "Grants permission to read a particular resource", "access": "Read", "resources": "Apis", "conditionKeys": "", "dependentActions": ""}, {"action": "GET", "desc": "Grants permission to read a particular resource", "access": "Read", "resources": "Authorizer", "conditionKeys": "", "dependentActions": ""}, {"action": "GET", "desc": "Grants permission to read a particular resource", "access": "Read", "resources": "Authorizers", "conditionKeys": "", "dependentActions": ""}, {"action": "GET", "desc": "Grants permission to read a particular resource", "access": "Read", "resources": "AuthorizersCache", "conditionKeys": "", "dependentActions": ""}, {"action": "GET", "desc": "Grants permission to read a particular resource", "access": "Read", "resources": "Cors", "conditionKeys": "", "dependentActions": ""}, {"action": "GET", "desc": "Grants permission to read a particular resource", "access": "Read", "resources": "Deployment", "conditionKeys": "", "dependentActions": ""}, {"action": "GET", "desc": "Grants permission to read a particular resource", "access": "Read", "resources": "Deployments", "conditionKeys": "", "dependentActions": ""}, {"action": "GET", "desc": "Grants permission to read a particular resource", "access": "Read", "resources": "ExportedAPI", "conditionKeys": "", "dependentActions": ""}, {"action": "GET", "desc": "Grants permission to read a particular resource", "access": "Read", "resources": "Integration", "conditionKeys": "", "dependentActions": ""}, {"action": "GET", "desc": "Grants permission to read a particular resource", "access": "Read", "resources": "IntegrationResponse", "conditionKeys": "", "dependentActions": ""}, {"action": "GET", "desc": "Grants permission to read a particular resource", "access": "Read", "resources": "IntegrationResponses", "conditionKeys": "", "dependentActions": ""}, {"action": "GET", "desc": "Grants permission to read a particular resource", "access": "Read", "resources": "Integrations", "conditionKeys": "", "dependentActions": ""}, {"action": "GET", "desc": "Grants permission to read a particular resource", "access": "Read", "resources": "Model", "conditionKeys": "", "dependentActions": ""}, {"action": "GET", "desc": "Grants permission to read a particular resource", "access": "Read", "resources": "ModelTemplate", "conditionKeys": "", "dependentActions": ""}, {"action": "GET", "desc": "Grants permission to read a particular resource", "access": "Read", "resources": "Models", "conditionKeys": "", "dependentActions": ""}, {"action": "GET", "desc": "Grants permission to read a particular resource", "access": "Read", "resources": "Route", "conditionKeys": "", "dependentActions": ""}, {"action": "GET", "desc": "Grants permission to read a particular resource", "access": "Read", "resources": "RouteRequestParameter", "conditionKeys": "", "dependentActions": ""}, {"action": "GET", "desc": "Grants permission to read a particular resource", "access": "Read", "resources": "RouteResponse", "conditionKeys": "", "dependentActions": ""}, {"action": "GET", "desc": "Grants permission to read a particular resource", "access": "Read", "resources": "RouteResponses", "conditionKeys": "", "dependentActions": ""}, {"action": "GET", "desc": "Grants permission to read a particular resource", "access": "Read", "resources": "RouteSettings", "conditionKeys": "", "dependentActions": ""}, {"action": "GET", "desc": "Grants permission to read a particular resource", "access": "Read", "resources": "Routes", "conditionKeys": "", "dependentActions": ""}, {"action": "GET", "desc": "Grants permission to read a particular resource", "access": "Read", "resources": "Stage", "conditionKeys": "", "dependentActions": ""}, {"action": "GET", "desc": "Grants permission to read a particular resource", "access": "Read", "resources": "Stages", "conditionKeys": "", "dependentActions": ""}, {"action": "PATCH", "desc": "Grants permission to update a particular resource", "access": "Write", "resources": "Api", "conditionKeys": "", "dependentActions": ""}, {"action": "PATCH", "desc": "Grants permission to update a particular resource", "access": "Write", "resources": "ApiMapping", "conditionKeys": "", "dependentActions": ""}, {"action": "PATCH", "desc": "Grants permission to update a particular resource", "access": "Write", "resources": "Authorizer", "conditionKeys": "", "dependentActions": ""}, {"action": "PATCH", "desc": "Grants permission to update a particular resource", "access": "Write", "resources": "Deployment", "conditionKeys": "", "dependentActions": ""}, {"action": "PATCH", "desc": "Grants permission to update a particular resource", "access": "Write", "resources": "Integration", "conditionKeys": "", "dependentActions": ""}, {"action": "PATCH", "desc": "Grants permission to update a particular resource", "access": "Write", "resources": "IntegrationResponse", "conditionKeys": "", "dependentActions": ""}, {"action": "PATCH", "desc": "Grants permission to update a particular resource", "access": "Write", "resources": "Model", "conditionKeys": "", "dependentActions": ""}, {"action": "PATCH", "desc": "Grants permission to update a particular resource", "access": "Write", "resources": "Route", "conditionKeys": "", "dependentActions": ""}, {"action": "PATCH", "desc": "Grants permission to update a particular resource", "access": "Write", "resources": "RouteRequestParameter", "conditionKeys": "", "dependentActions": ""}, {"action": "PATCH", "desc": "Grants permission to update a particular resource", "access": "Write", "resources": "RouteResponse", "conditionKeys": "", "dependentActions": ""}, {"action": "PATCH", "desc": "Grants permission to update a particular resource", "access": "Write", "resources": "Stage", "conditionKeys": "", "dependentActions": ""}, {"action": "PATCH", "desc": "Grants permission to update a particular resource", "access": "Write", "resources": "", "conditionKeys": "aws:RequestTag/${TagKey}\n\n\naws:TagKeys", "dependentActions": ""}, {"action": "POST", "desc": "Grants permission to create a particular resource", "access": "Write", "resources": "ApiMappings", "conditionKeys": "", "dependentActions": ""}, {"action": "POST", "desc": "Grants permission to create a particular resource", "access": "Write", "resources": "Apis", "conditionKeys": "", "dependentActions": ""}, {"action": "POST", "desc": "Grants permission to create a particular resource", "access": "Write", "resources": "Authorizers", "conditionKeys": "", "dependentActions": ""}, {"action": "POST", "desc": "Grants permission to create a particular resource", "access": "Write", "resources": "Deployments", "conditionKeys": "", "dependentActions": ""}, {"action": "POST", "desc": "Grants permission to create a particular resource", "access": "Write", "resources": "IntegrationResponses", "conditionKeys": "", "dependentActions": ""}, {"action": "POST", "desc": "Grants permission to create a particular resource", "access": "Write", "resources": "Integrations", "conditionKeys": "", "dependentActions": ""}, {"action": "POST", "desc": "Grants permission to create a particular resource", "access": "Write", "resources": "Models", "conditionKeys": "", "dependentActions": ""}, {"action": "POST", "desc": "Grants permission to create a particular resource", "access": "Write", "resources": "RouteResponses", "conditionKeys": "", "dependentActions": ""}, {"action": "POST", "desc": "Grants permission to create a particular resource", "access": "Write", "resources": "Routes", "conditionKeys": "", "dependentActions": ""}, {"action": "POST", "desc": "Grants permission to create a particular resource", "access": "Write", "resources": "Stages", "conditionKeys": "", "dependentActions": ""}, {"action": "POST", "desc": "Grants permission to create a particular resource", "access": "Write", "resources": "", "conditionKeys": "aws:RequestTag/${TagKey}\n\n\naws:TagKeys", "dependentActions": ""}, {"action": "PUT", "desc": "Grants permission to update a particular resource", "access": "Write", "resources": "Api", "conditionKeys": "", "dependentActions": ""}, {"action": "PUT", "desc": "Grants permission to update a particular resource", "access": "Write", "resources": "Apis", "conditionKeys": "", "dependentActions": ""}, {"action": "PUT", "desc": "Grants permission to update a particular resource", "access": "Write", "resources": "", "conditionKeys": "aws:RequestTag/${TagKey}\n\n\naws:TagKeys", "dependentActions": ""}], "resources": [{"resourceType": "AccessLogSettings", "arn": "arn:${Partition}:apigateway:${Region}::/apis/${ApiId}/stages/${StageName}/accesslogsettings", "conditionKeys": ""}, {"resourceType": "Api", "arn": "arn:${Partition}:apigateway:${Region}::/apis/${ApiId}", "conditionKeys": "apigateway:Request/ApiKeyRequired\n\n\napigateway:Request/ApiName\n\n\napigateway:Request/AuthorizerType\n\n\napigateway:Request/AuthorizerUri\n\n\napigateway:Request/DisableExecuteApiEndpoint\n\n\napigateway:Request/EndpointType\n\n\napigateway:Request/RouteAuthorizationType\n\n\napigateway:Resource/ApiKeyRequired\n\n\napigateway:Resource/ApiName\n\n\napigateway:Resource/AuthorizerType\n\n\napigateway:Resource/AuthorizerUri\n\n\napigateway:Resource/DisableExecuteApiEndpoint\n\n\napigateway:Resource/EndpointType\n\n\napigateway:Resource/RouteAuthorizationType\n\n\naws:ResourceTag/${TagKey}"}, {"resourceType": "Apis", "arn": "arn:${Partition}:apigateway:${Region}::/apis", "conditionKeys": "apigateway:Request/ApiKeyRequired\n\n\napigateway:Request/ApiName\n\n\napigateway:Request/AuthorizerType\n\n\napigateway:Request/AuthorizerUri\n\n\napigateway:Request/DisableExecuteApiEndpoint\n\n\napigateway:Request/EndpointType\n\n\napigateway:Request/RouteAuthorizationType\n\n\naws:ResourceTag/${TagKey}"}, {"resourceType": "ApiMapping", "arn": "arn:${Partition}:apigateway:${Region}::/domainnames/${DomainName}/apimappings/${ApiMappingId}", "conditionKeys": "aws:ResourceTag/${TagKey}"}, {"resourceType": "ApiMappings", "arn": "arn:${Partition}:apigateway:${Region}::/domainnames/${DomainName}/apimappings", "conditionKeys": "aws:ResourceTag/${TagKey}"}, {"resourceType": "Authorizer", "arn": "arn:${Partition}:apigateway:${Region}::/apis/${ApiId}/authorizers/${AuthorizerId}", "conditionKeys": "apigateway:Request/AuthorizerType\n\n\napigateway:Request/AuthorizerUri\n\n\napigateway:Resource/AuthorizerType\n\n\napigateway:Resource/AuthorizerUri\n\n\naws:ResourceTag/${TagKey}"}, {"resourceType": "Authorizers", "arn": "arn:${Partition}:apigateway:${Region}::/apis/${ApiId}/authorizers", "conditionKeys": "apigateway:Request/AuthorizerType\n\n\napigateway:Request/AuthorizerUri\n\n\naws:ResourceTag/${TagKey}"}, {"resourceType": "AuthorizersCache", "arn": "arn:${Partition}:apigateway:${Region}::/apis/${ApiId}/stages/${StageName}/cache/authorizers", "conditionKeys": ""}, {"resourceType": "Cors", "arn": "arn:${Partition}:apigateway:${Region}::/apis/${ApiId}/cors", "conditionKeys": ""}, {"resourceType": "Deployment", "arn": "arn:${Partition}:apigateway:${Region}::/apis/${ApiId}/deployments/${DeploymentId}", "conditionKeys": "aws:ResourceTag/${TagKey}"}, {"resourceType": "Deployments", "arn": "arn:${Partition}:apigateway:${Region}::/apis/${ApiId}/deployments", "conditionKeys": "apigateway:Request/StageName\n\n\naws:ResourceTag/${TagKey}"}, {"resourceType": "ExportedAPI", "arn": "arn:${Partition}:apigateway:${Region}::/apis/${ApiId}/exports/${Specification}", "conditionKeys": ""}, {"resourceType": "Integration", "arn": "arn:${Partition}:apigateway:${Region}::/apis/${ApiId}/integrations/${IntegrationId}", "conditionKeys": "aws:ResourceTag/${TagKey}"}, {"resourceType": "Integrations", "arn": "arn:${Partition}:apigateway:${Region}::/apis/${ApiId}/integrations", "conditionKeys": "aws:ResourceTag/${TagKey}"}, {"resourceType": "IntegrationResponse", "arn": "arn:${Partition}:apigateway:${Region}::/apis/${ApiId}/integrations/${IntegrationId}/integrationresponses/${IntegrationResponseId}", "conditionKeys": ""}, {"resourceType": "IntegrationResponses", "arn": "arn:${Partition}:apigateway:${Region}::/apis/${ApiId}/integrations/${IntegrationId}/integrationresponses", "conditionKeys": ""}, {"resourceType": "Model", "arn": "arn:${Partition}:apigateway:${Region}::/apis/${ApiId}/models/${ModelId}", "conditionKeys": "aws:ResourceTag/${TagKey}"}, {"resourceType": "Models", "arn": "arn:${Partition}:apigateway:${Region}::/apis/${ApiId}/models", "conditionKeys": "aws:ResourceTag/${TagKey}"}, {"resourceType": "ModelTemplate", "arn": "arn:${Partition}:apigateway:${Region}::/apis/${ApiId}/models/${ModelId}/template", "conditionKeys": ""}, {"resourceType": "Route", "arn": "arn:${Partition}:apigateway:${Region}::/apis/${ApiId}/routes/${RouteId}", "conditionKeys": "apigateway:Request/ApiKeyRequired\n\n\napigateway:Request/RouteAuthorizationType\n\n\napigateway:Resource/ApiKeyRequired\n\n\napigateway:Resource/RouteAuthorizationType\n\n\naws:ResourceTag/${TagKey}"}, {"resourceType": "Routes", "arn": "arn:${Partition}:apigateway:${Region}::/apis/${ApiId}/routes", "conditionKeys": "apigateway:Request/ApiKeyRequired\n\n\napigateway:Request/RouteAuthorizationType\n\n\naws:ResourceTag/${TagKey}"}, {"resourceType": "RouteResponse", "arn": "arn:${Partition}:apigateway:${Region}::/apis/${ApiId}/routes/${RouteId}/routeresponses/${RouteResponseId}", "conditionKeys": ""}, {"resourceType": "RouteResponses", "arn": "arn:${Partition}:apigateway:${Region}::/apis/${ApiId}/routes/${RouteId}/routeresponses", "conditionKeys": ""}, {"resourceType": "RouteRequestParameter", "arn": "arn:${Partition}:apigateway:${Region}::/apis/${ApiId}/routes/${RouteId}/requestparameters/${RequestParameterKey}", "conditionKeys": ""}, {"resourceType": "RouteSettings", "arn": "arn:${Partition}:apigateway:${Region}::/apis/${ApiId}/stages/${StageName}/routesettings/${RouteKey}", "conditionKeys": ""}, {"resourceType": "Stage", "arn": "arn:${Partition}:apigateway:${Region}::/apis/${ApiId}/stages/${StageName}", "conditionKeys": "apigateway:Request/AccessLoggingDestination\n\n\napigateway:Request/AccessLoggingFormat\n\n\napigateway:Resource/AccessLoggingDestination\n\n\napigateway:Resource/AccessLoggingFormat\n\n\naws:ResourceTag/${TagKey}"}, {"resourceType": "Stages", "arn": "arn:${Partition}:apigateway:${Region}::/apis/${ApiId}/stages", "conditionKeys": "apigateway:Request/AccessLoggingDestination\n\n\napigateway:Request/AccessLoggingFormat\n\n\naws:ResourceTag/${TagKey}"}], "conditions": [{"conditionKey": "apigateway:Request/AccessLoggingDestination", "desc": "Filters access by access log destination. Available during the CreateStage and UpdateStage operations", "typ": "String"}, {"conditionKey": "apigateway:Request/AccessLoggingFormat", "desc": "Filters access by access log format. Available during the CreateStage and UpdateStage operations", "typ": "String"}, {"conditionKey": "apigateway:Request/ApiKeyRequired", "desc": "Filters access by the requirement of API. Available during the CreateRoute and UpdateRoute operations. Also available as a collection during import and reimport", "typ": "ArrayOfBool"}, {"conditionKey": "apigateway:Request/ApiName", "desc": "Filters access by API name. Available during the CreateApi and UpdateApi operations", "typ": "String"}, {"conditionKey": "apigateway:Request/AuthorizerType", "desc": "Filters access by type of authorizer in the request, for example REQUEST or JWT. Available during CreateAuthorizer and UpdateAuthorizer. Also available during import and reimport as an ArrayOfString", "typ": "ArrayOfString"}, {"conditionKey": "apigateway:Request/AuthorizerUri", "desc": "Filters access by URI of a Lambda authorizer function. Available during CreateAuthorizer and UpdateAuthorizer. Also available during import and reimport as an ArrayOfString", "typ": "ArrayOfString"}, {"conditionKey": "apigateway:Request/DisableExecuteApiEndpoint", "desc": "Filters access by status of the default execute-api endpoint. Available during the CreateApi and UpdateApi operations", "typ": "Bool"}, {"conditionKey": "apigateway:Request/EndpointType", "desc": "Filters access by endpoint type. Available during the CreateDomainName, UpdateDomainName, CreateApi, and UpdateApi operations", "typ": "ArrayOfString"}, {"conditionKey": "apigateway:Request/MtlsTrustStoreUri", "desc": "Filters access by URI of the truststore used for mutual TLS authentication. Available during the CreateDomainName and UpdateDomainName operations", "typ": "String"}, {"conditionKey": "apigateway:Request/MtlsTrustStoreVersion", "desc": "Filters access by version of the truststore used for mutual TLS authentication. Available during the CreateDomainName and UpdateDomainName operations", "typ": "String"}, {"conditionKey": "apigateway:Request/RouteAuthorizationType", "desc": "Filters access by authorization type, for example NONE, AWS_IAM, CUSTOM, JWT. Available during the CreateRoute and UpdateRoute operations. Also available as a collection during import", "typ": "ArrayOfString"}, {"conditionKey": "apigateway:Request/SecurityPolicy", "desc": "Filters access by TLS version. Available during the CreateDomain and UpdateDomain operations", "typ": "ArrayOfString"}, {"conditionKey": "apigateway:Request/StageName", "desc": "Filters access by stage name of the deployment that you attempt to create. Available during the CreateDeployment operation", "typ": "String"}, {"conditionKey": "apigateway:Resource/AccessLoggingDestination", "desc": "Filters access by access log destination of the current Stage resource. Available during the UpdateStage and DeleteStage operations", "typ": "String"}, {"conditionKey": "apigateway:Resource/AccessLoggingFormat", "desc": "Filters access by access log format of the current Stage resource. Available during the UpdateStage and DeleteStage operations", "typ": "String"}, {"conditionKey": "apigateway:Resource/ApiKeyRequired", "desc": "Filters access by the requirement of API key for the existing Route resource. Available during the UpdateRoute and DeleteRoute operations. Also available as a collection during reimport", "typ": "ArrayOfBool"}, {"conditionKey": "apigateway:Resource/ApiName", "desc": "Filters access by API name. Available during the UpdateApi and DeleteApi operations", "typ": "String"}, {"conditionKey": "apigateway:Resource/AuthorizerType", "desc": "Filters access by the current type of authorizer, for example REQUEST or JWT. Available during UpdateAuthorizer and DeleteAuthorizer operations. Also available during import and reimport as an ArrayOfString", "typ": "ArrayOfString"}, {"conditionKey": "apigateway:Resource/AuthorizerUri", "desc": "Filters access by the URI of the current Lambda authorizer associated with the current API. Available during UpdateAuthorizer and DeleteAuthorizer. Also available as a collection during reimport", "typ": "ArrayOfString"}, {"conditionKey": "apigateway:Resource/DisableExecuteApiEndpoint", "desc": "Filters access by status of the default execute-api endpoint. Available during the UpdateApi and DeleteApi operations", "typ": "Bool"}, {"conditionKey": "apigateway:Resource/EndpointType", "desc": "Filters access by endpoint type. Available during the UpdateDomainName, DeleteDomainName, UpdateApi, and DeleteApi operations", "typ": "ArrayOfString"}, {"conditionKey": "apigateway:Resource/MtlsTrustStoreUri", "desc": "Filters access by URI of the truststore used for mutual TLS authentication. Available during the UpdateDomainName and DeleteDomainName operations", "typ": "String"}, {"conditionKey": "apigateway:Resource/MtlsTrustStoreVersion", "desc": "Filters access by version of the truststore used for mutual TLS authentication. Available during the UpdateDomainName and DeleteDomainName operations", "typ": "String"}, {"conditionKey": "apigateway:Resource/RouteAuthorizationType", "desc": "Filters access by authorization type of the existing Route resource, for example NONE, AWS_IAM, CUSTOM. Available during the UpdateRoute and DeleteRoute operations. Also available as a collection during reimport", "typ": "ArrayOfString"}, {"conditionKey": "apigateway:Resource/SecurityPolicy", "desc": "Filters access by TLS version. Available during the UpdateDomainName and DeleteDomainName operations", "typ": "ArrayOfString"}, {"conditionKey": "aws:RequestTag/${TagKey}", "desc": "Filters access by the presence of tag key-value pairs in the request", "typ": "String"}, {"conditionKey": "aws:ResourceTag/${TagKey}", "desc": "Filters access by tag key-value pairs attached to the resource", "typ": "String"}, {"conditionKey": "aws:TagKeys", "desc": "Filters access by the presence of tag keys in the request", "typ": "ArrayOfString"}]}